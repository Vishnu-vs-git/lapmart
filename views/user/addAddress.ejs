<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  f
</head>
<body>
 
    <!-- Header/Navbar Section -->
    <%-include('../partials/header') %>
    <%-include('../partials/navbar') %>

    <div class="w-screen flex"> 
        <% if (success) { %>
            <div class="alert alert-success"><%= success %></div>
        <% } %>
        <% if (error) { %>
            <div class="alert alert-danger"><%= error %></div>
        <% } %>
        <%- include('../partials/modifiedUsidebar') %>
        
        <div id="messageContainer" class="hidden fixed top-4 right-4 bg-red-200 text-red-800 p-4 rounded-lg shadow-1g"></div>
        
        <!-- Profile Form Section -->
        <div class="w-3/4 p-8 break rounded-lg shadow-md border-2 border-black ml-4">
            <h2 class="text-xl font-bold mb-6 text-center">Add Address</h2>

            <!-- Error Message Container -->
            <div id="errorMessages" class="hidden mb-4 p-4 bg-red-100 text-red-800 rounded"></div>

            <form name="userAddressForm" class="break3 p-6 rounded shadow-md font-bold border-2 border-black" onsubmit="validateForm(event)" action="/user/addAddress" method="post">
                <div class="mb-4">
                    <label class="block mb-1">Name</label>
                    <input type="text" name="userName" class="w-full p-2 border border-gray-900 rounded" placeholder="Enter Name">
                </div>
                <div class="mb-4">
                    <label class="block mb-1">AddressLine1</label>
                    <input type="text" name="addressLine1" class="w-full p-2 border border-gray-900 rounded" placeholder="Enter Address Line 1">
                </div>
                <div class="mb-4">
                    <label class="block mb-1">AddressLine2</label>
                    <input type="text" name="addressLine2" class="w-full p-2 border border-gray-900 rounded" placeholder="Enter Address Line 2">
                </div>
                <div class="mb-4">
                    <label class="block mb-1">Street</label>
                    <input type="text" name="street" class="w-full p-2 border border-gray-900 rounded" placeholder="Enter Street">
                </div>
                <div class="mb-4">
                    <label class="block mb-1">City</label>
                    <input type="text" name="city" class="w-full p-2 border border-gray-900 rounded" placeholder="Enter City">
                </div>
                <div class="mb-4">
                    <label class="block mb-1">State</label>
                    <input type="text" name="state" class="w-full p-2 border border-gray-900 rounded" placeholder="Enter State">
                </div>
                <div class="mb-4">
                    <label class="block mb-1">Country</label>
                    <input type="text" name="country" class="w-full p-2 border border-gray-900 rounded" placeholder="Enter Country">
                </div>
                <div class="mb-4">
                    <label class="block mb-1">Zip Code</label>
                    <input type="text" name="zipCode" class="w-full p-2 border border-gray-900 rounded" placeholder="Enter Zip Code">
                </div>
                <div class="mb-4">
                    <label class="block mb-1">Phone</label>
                    <input type="text" name="phoneNo" class="w-full p-2 border border-gray-900 rounded" placeholder="Enter Phone Number">
                </div>
                <div class="flex justify-center items-center">
                    <button type="submit" class="bg-green-500 text-white font-bold px-8 py-2 rounded">Add</button>
                </div>
            </form>
        </div>
    </div>
 
    <script>
       function validateForm(event) {
    event.preventDefault(); // Prevent form from submitting

    let isValid = true;
    let errorMessages = []; // Array to collect all error messages

    // Regular expressions
    const capitalLetterRegex = /^[A-Z][a-z]*(\s[A-Z][a-z]*)*$/; // Checks if each word starts with an uppercase letter
    const codeRegex = /^[0-9]{6}$/; // Zip code must be exactly 6 digits
    const phoneRegex = /^[0-9]{10}$/; // Phone number must be exactly 10 digits

    // Clear any previous error messages
    const errorContainer = document.getElementById('errorMessages');
    errorContainer.innerHTML = ''; // Clear content
    errorContainer.classList.add('hidden'); // Hide container

    // Gather form values
    const fields = {
         name: document.forms["userAddressForm"]["userName"].value.trim(),
        addressLine1: document.forms["userAddressForm"]["addressLine1"].value.trim(),
        addressLine2: document.forms["userAddressForm"]["addressLine2"].value.trim(),
        street: document.forms["userAddressForm"]["street"].value.trim(),
        city: document.forms["userAddressForm"]["city"].value.trim(),
        state: document.forms["userAddressForm"]["state"].value.trim(),
        country: document.forms["userAddressForm"]["country"].value.trim(),
    };

    const zipCode = document.forms['userAddressForm']['zipCode'].value.trim();
    const phoneNo = document.forms['userAddressForm']['phoneNo'].value.trim();

    // Check for empty fields and capital letter validation
    for (const [fieldName, fieldValue] of Object.entries(fields)) {
        if (!fieldValue) {
            errorMessages.push(`${fieldName} is required.`);
            isValid = false;
        } else if (!capitalLetterRegex.test(fieldValue)) {
            errorMessages.push(`${fieldName} must start with a capital letter,followed by lowercase.`);
            isValid = false;
        }
    }

    // Validate Zip Code
    if (!zipCode || !codeRegex.test(zipCode)) {
        errorMessages.push('Zip code must be exactly 6 digits.');
        isValid = false;
    }

    // Validate Phone Number
    if (!phoneNo || !phoneRegex.test(phoneNo)) {
        errorMessages.push('Phone number must contain only numbers and be exactly 10 digits.');
        isValid = false;
    }

    // Show all error messages
    if (!isValid) {
        errorContainer.innerHTML = errorMessages.join('<br>');
        errorContainer.classList.remove('hidden'); // Display container
    } else {
        // Success
        Swal.fire({
            icon: 'success',
            title: 'Profile Updated',
            text: 'Your address has been successfully updated',
            showConfirmButton: false,
            timer: 2000,
        }).then(() => {
            document.forms["userAddressForm"].submit();
        });
    }

    return isValid; // Return whether the form is valid
}

    </script>  
</body>
</html>
