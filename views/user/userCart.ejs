<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Cart - LapMart</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css" rel="stylesheet">
    <style>
        .main-content {
            flex: 1 0 65%;
        }
        .order-summary {
            flex: 1 0 30%;
        }
    </style>
</head>
<body class="bg-gray-100 min-h-screen flex flex-col">
    <!-- Include header partial -->
    <%- include('../partials/loggedheader') %>
    <%- include('../partials/navbar') %>
   

    <main class="flex-grow container mx-auto my-10 p-8 bg-white rounded-lg shadow-lg max-w-6xl">
        <h1 class="text-4xl font-bold text-center mb-6 text-blue-700">Shopping Cart</h1>

        <% if (cartItems.length === 0) { %>
            <p class="text-lg text-red-500 text-center">Your cart is empty.</p>
        <% } else { %>
            <div class="flex flex-col lg:flex-row gap-6">
                <div class="main-content">
                    <div id="cart-items" class="grid gap-4">
                        <% cartItems.forEach(item => { %>
                            <div class="flex items-center justify-between p-4 bg-gray-100 rounded-lg shadow">
                                <img src="<%= item.productId.images[0] %>" alt="<%= item.productId.name %>" class="h-16 w-16 rounded">
                                <div class="flex-1 ml-4">
                                    <h2 class="text-lg font-semibold"><%= item.productId.name %></h2>

                                    <% if (item.productId.discountValue > 0) { %>
                                        <p class="text-gray-600">
                                            Price: ₹<span class="line-through"><%= item.productId.price.toFixed(2) %></span>
                                        </p>
                                        <p class="text-gray-600">
                                            Offer Price: ₹<%= item.productId.finalPrice %>
                                        </p>
                                    <% } else { %>
                                        <p class="text-gray-600">
                                            Price: ₹<%= item.productId.price.toFixed(2) %>
                                        </p>
                                    <% } %>

                                    <p class="text-gray-600">Total: ₹<span class="item-total"><%= (item.productId.discountValue > 0 ? item.productId.finalPrice : item.productId.price) * item.quantity %></span></p>
                                </div>
                                <input type="number" value="<%= item.quantity %>" min="1" class="w-16 text-center border border-gray-300 rounded quantity-input" onchange="updateQuantity('<%= item._id %>', this.value)">
                                <button class="bg-red-500 text-white px-3 py-1 rounded" onclick="confirmRemove('<%= item._id %>')">Remove</button>
                            </div>
                        <% }) %>
                    </div>
                    <div class="mt-6">
                        <a href="/" class="bg-gray-300 text-gray-700 px-4 py-2 rounded">Continue Shopping</a>
                    </div>
                </div>

                <div class="order-summary bg-gray-100 p-4 rounded-lg shadow">
                    <h2 class="text-2xl font-bold mb-4">Order Summary</h2>

                    <div class="flex justify-between mt-4">
                        <span>Subtotal:</span>
                        <span id="subtotal">₹<%= subtotal.toFixed(2) %></span>
                    </div>

                    <div class="flex justify-between mt-2">
                        <span>Discount:</span>
                        <span id="discount">₹<%= discount.toFixed(2) %></span>
                    </div>

                    <div class="flex justify-between mt-2">
                        <span>Delivery Charge:</span>
                        <span>Free</span>
                    </div>

                    <div class="flex justify-between mt-4 font-bold">
                        <span>Total:</span>
                        <span id="total">₹<%= (subtotal +0).toFixed(2) %></span>
                    </div>

                    <button class="mt-6 w-full bg-green-500 text-white px-4 py-2 rounded" onclick="proceedToCheckout()">Proceed to Checkout</button>
                </div>
            </div>
        <% } %>
    </main>

    <footer class="bg-gray-800 text-white py-4 text-center mt-auto">
        <%- include('../partials/footer') %>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script>
        const deliveryCharge = 5;

        function updateQuantity(itemId, quantity) {
            fetch(`/updateCart/${itemId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ itemId: itemId, quantity: parseInt(quantity, 10) })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update the UI based on the new data received from the server
                    document.getElementById('subtotal').innerText = '₹' + data.subtotal.toFixed(2);
                    document.getElementById('discount').innerText = '₹' + data.discount.toFixed(2);
                    document.getElementById('total').innerText = '₹' + (data.subtotal + deliveryCharge).toFixed(2);
                    
                            window.location.href = '/user/cart';
                        
                    
                
                } else {
                    Swal.fire({
                        title: 'Warning',
                        text: data.message,
                        icon: 'warning',
                        timer: 3000,
                        willClose: () => {
                            window.location.href = '/user/cart';
                        }
                    });
                }
            })
            .catch(error => console.error('Error updating quantity:', error));
        }

        function confirmRemove(itemId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, remove it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    removeItem(itemId);
                }
            });
        }

        function removeItem(itemId) {
            fetch(`/deleteCart/${itemId}`, { method: 'DELETE' })
                .then(response => response.json())
                .then(data => {
                    if (data.success) window.location.reload();
                    else alert("Failed to remove item");
                })
                .catch(error => console.error('Error removing item:', error));
        }

        function proceedToCheckout() {
            window.location.href = '/checkout';
        }

        // Toggle the dropdown on icon click
     userIcon.addEventListener('click', function (e) {
            e.preventDefault();
            userDropdown.classList.toggle('hidden');
        });

        // Close the dropdown if clicked outside
        window.addEventListener('click', function (e) {
            if (!userIcon.contains(e.target) && !userDropdown.contains(e.target)) {
                userDropdown.classList.add('hidden');
            }
        });
    </script>
    <!-- Include SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  <% if (message) { %>
    Swal.fire({
      icon: 'info',
      title: 'Stock Update',
      text: "<%= message %>",
      confirmButtonText: 'Got it!',
      iconHtml: 'ℹ️', // Custom info icon for a modern feel
      background: '#1e293b', // Dark background
      color: '#f1f5f9', // Light color for text
      confirmButtonColor: '#3b82f6', // Cool blue for confirm button
      padding: '1.5em', // Padding for a spacious layout
      buttonsStyling: true,
      showClass: {
        popup: 'animate__animated animate__zoomIn' // Smooth zoom-in animation
      },
      hideClass: {
        popup: 'animate__animated animate__zoomOut' // Smooth zoom-out animation
      },
      customClass: {
        popup: 'modern-swal-popup',
        title: 'modern-swal-title',
        confirmButton: 'modern-swal-confirm-button'
      }
    });
  <% } %>
</script>

</body>
</html>
